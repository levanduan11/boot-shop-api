import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'org.jetbrains.kotlin.jvm' version '1.8.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
}

group = 'com.boot.admin'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

def JJWT_RELEASE_VERSION = "0.11.2"

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//util
	implementation 'com.google.guava:guava:30.1-jre'
	// jwt
	implementation "io.jsonwebtoken:jjwt-api:${JJWT_RELEASE_VERSION}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${JJWT_RELEASE_VERSION}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${JJWT_RELEASE_VERSION}"
	implementation(project(":bootshop-common"))
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
